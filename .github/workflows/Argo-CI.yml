name: ci-dev

on:
  push:
    branches: [dev]
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

env:
  IMAGE: s1natex/my-devops-cicd-demo

jobs:
  tests-unit-integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            app/requirements.txt
            requirements-dev.txt
      - run: pip install -r app/requirements.txt -r requirements-dev.txt
      - run: PYTHONPATH=. pytest tests/unit tests/integration -q

  tests-e2e:
    name: e2e on docker compose
    runs-on: ubuntu-latest
    needs: tests-unit-integration
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            app/requirements.txt
            requirements-dev.txt
      - run: pip install -r requirements-dev.txt
      - uses: docker/setup-buildx-action@v3
      - name: Build & start services (compose)
        run: docker compose up -d --build
      - name: Wait for app
        run: |
          for i in {1..30}; do
            if curl -fsS http://127.0.0.1:8000/ >/dev/null; then exit 0; fi
            echo "Waiting for app... ($i/30)"; sleep 2
          done
          exit 1
      - name: Run e2e tests
        env:
          PYTHONPATH: .
          COMPOSE_E2E: "1"
        run: pytest tests/e2e -q
      - if: always()
        run: docker compose logs --no-color --timestamps
      - if: always()
        run: docker compose down -v

  build-push:
    runs-on: ubuntu-latest
    needs: [tests-unit-integration, tests-e2e]
    steps:
      - uses: actions/checkout@v4
      - name: Compute tag
        id: tag
        run: |
          DATE=$(date +%Y%m%d)
          GIT_SHA=${GITHUB_SHA::7}
          echo "TAG=${DATE}-${GIT_SHA}" >> $GITHUB_OUTPUT
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: |
          docker build -t $IMAGE:${{ steps.tag.outputs.TAG }} ./app
          docker push $IMAGE:${{ steps.tag.outputs.TAG }}
    outputs:
      TAG: ${{ steps.tag.outputs.TAG }}

  update-manifests:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - uses: actions/checkout@v4

      - name: Update deployment manifest with new image
        run: |
          sed -i "s|^\(\s*image:\s*\)s1natex/my-devops-cicd-demo:.*$|\1s1natex/my-devops-cicd-demo:${{ needs.build-push.outputs.TAG }}|" k8s/deployment.yaml

      - name: Show diff
        run: git --no-pager diff -- k8s/deployment.yaml

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          branch: promote/${{ needs.build-push.outputs.TAG }}
          base: main
          title: "Promote image ${{ needs.build-push.outputs.TAG }} to main"
          body: |
            New image: `s1natex/my-devops-cicd-demo:${{ needs.build-push.outputs.TAG }}`
            This PR updates `k8s/deployment.yaml` with the new immutable tag so ArgoCD can sync it.
          commit-message: "chore(deploy): update image to s1natex/my-devops-cicd-demo:${{ needs.build-push.outputs.TAG }}"
          add-paths: |
            k8s/deployment.yaml
          delete-branch: true
