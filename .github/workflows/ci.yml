name: ci
on:
  # pull_request:
  #   branches: [main]
  # push:
  #   branches: [dev]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  tests-unit-integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            app/requirements.txt
            requirements-dev.txt

      - name: Install deps
        run: pip install -r app/requirements.txt -r requirements-dev.txt

      - name: Unit + Integration tests
        env:
          PYTHONPATH: .
        run: pytest tests/unit tests/integration -q

  tests-e2e:
    name: e2e on docker compose
    runs-on: ubuntu-latest
    needs: tests-unit-integration

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'
          cache-dependency-path: |
            app/requirements.txt
            requirements-dev.txt

      - name: Install test deps
        run: pip install -r requirements-dev.txt

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & start services (compose)
        run: |
          docker compose version
          docker compose up -d --build

      - name: Wait for app to be ready
        run: |
          for i in {1..30}; do
            if curl -fsS http://127.0.0.1:8000/ >/dev/null; then
              echo "App is up"; exit 0
            fi
            echo "Waiting for app... ($i/30)"; sleep 2
          done
          echo "App failed to start in time"; docker compose ps; exit 1

      - name: Run e2e tests
        env:
          PYTHONPATH: .
          COMPOSE_E2E: "1"
        run: pytest tests/e2e -q

      - name: Show compose logs (always)
        if: always()
        run: docker compose logs --no-color --timestamps

      - name: Tear down
        if: always()
        run: docker compose down -v
